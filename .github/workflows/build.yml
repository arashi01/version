name: "CI Build"

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ v* ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test_jvm:
    name: Execute Tests (JVM) (JDK ${{ matrix.java }})
    strategy:
      fail-fast: false
      matrix:
        java: [ 11, 17, 21 ]
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: sbt

      - name: Execute Unit Tests
        run: sbt "jvmProjects/test"

      - name: Package Project Products
        run: sbt "jvmProjects/package"

  test_native:
    name: Execute Tests (Native ${{ matrix.runner }}) (JDK ${{ matrix.java }})
    strategy:
      fail-fast: false
      matrix:
        java: [ 11, 17, 21 ]
        runner: [ ubuntu-22.04, windows-2022, macos-13 ]
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: sbt

      - name: Execute Unit Tests
        run: sbt "nativeProjects/test"

      - name: Package Project Products
        run: sbt "nativeProjects/package"

  test_js:
    name: Execute Tests (NodeJS ${{ matrix.node }}) (JDK ${{ matrix.java }})
    strategy:
      fail-fast: false
      matrix:
        java: [ 11, 17, 21 ]
        node: [ 18.x, 20.x ]
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: sbt

      - name: Execute Unit Tests
        run: sbt "jsProjects/test"

      - name: Package Project Products
        run: sbt "jsProjects/package"


  publish:
    name: Publish Release
    needs: [ test_jvm, test_native, test_js ]
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          check-latest: true

      - name: Import Signing Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OSS_PUBLISH_USER_SIGNING_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Update Signing Key Trust Level
        run: echo -e "trust\n5\ny" | gpg --batch --no-tty --command-fd 0 --edit-key ${{ secrets.OSS_PUBLISH_USER_SIGNING_KEY_ID }}

      - name: Publish Projects
        run: sbt publishSigned sonatypeBundleRelease
        env:
          PUBLISH_USER: ${{ secrets.OSS_PUBLISH_USER }}
          PUBLISH_USER_PASSPHRASE: ${{ secrets.OSS_PUBLISH_USER_PASSPHRASE }}
          SIGNING_KEY_ID: ${{ secrets.OSS_PUBLISH_USER_SIGNING_KEY_ID }}
